services:
  web:
    build: .
    container_name: web
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - ./db.sqlite3:/app/db.sqlite3
    env_file:
      - .env  # Указываем файл .env для загрузки переменных окружения
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DEBUG=1
    ports:
      - "8000:8000"
    networks:
      - flower_network

  celery:
    build: .
    container_name: celery_worker
    command: celery -A flower_delivery worker -l info
    volumes:
      - .:/app
    depends_on:
      - redis
    env_file:
      - .env
    networks:
      - flower_network

  client_bot:
    build:
      context: .
      dockerfile: telegram_bot/Dockerfile
    container_name: client_bot
    command: python telegram_bot/bot/main.py
    volumes:
      - .:/app
    depends_on:
      - web
    env_file:
      - .env
    dns:
      - 8.8.8.8
      - 8.8.4.4
    networks:
      - flower_network

  admin_bot:
    build:
      context: ./
      dockerfile: telegramadmin_bot/Dockerfile
    container_name: admin_bot
    command: python manage.py run_admin_bot
    volumes:
      - .:/app
    depends_on:
      - web
    env_file:
      - .env
    dns:
      - 8.8.8.8
      - 8.8.4.4
    networks:
      - flower_network

  redis:
    image: redis:latest
    container_name: redis
    networks:
      - flower_network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./flower_delivery/nginx/ssl:/etc/nginx/ssl:ro
      - ./staticfiles:/app/staticfiles:ro
      - ./media:/app/media:rw
    depends_on:
      - web
    networks:
      - flower_network

networks:
  flower_network:
    driver: bridge
